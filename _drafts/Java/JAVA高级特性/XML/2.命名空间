1.空间命名作用
  命名空间在XML中可以用作元素或属性名称的名称集合，它们用来标识来自特定域（标准组组、公司、行业）的名称。

2.空间命名的必要性
  XML解析器在解析XML文档时，对于重名的元素，可能出现解析冲突，命名空间有助于标准化元素和属性，为它们加上唯一标识。

3.声明命名空间
  语法：xmlns:[prefix]="[命名空间的URL]"
    prefix是前缀名称，它用作命名空间的别名
    xmlns是保留属性

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
</beans>

4.xmlns和xmlns:xsi有什么不同
  xmlns表示默认的Namespace。
  xmlns:xsi表示使用xsi作为前缀的Namespace，当然前缀xsi需要在文档中声明

5.xsi:schemaLocation有何作用
  xsi:schemaLocation属性其实是Namespace为http://www.w3.org/2001/XMLSchema-instance里的schemaLocation属性
  正是因为我们一开始声明了xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"这里才写作xsi:schemaLocation
  它定义了XML Namespace和对应的XSD（Xml Schema Definition）文档的位置的关系。
  由一个或多个URI引用对组成，两个URI之间以空白符分隔（空格和换行均可）。
  第一个URI是定义的XML Namespace的值，第二个URI给出Schema文档的位置，Schema处理器将从这个位置读取Schema文档，该文档的targetNamespace必须与第一个URI相匹配。
