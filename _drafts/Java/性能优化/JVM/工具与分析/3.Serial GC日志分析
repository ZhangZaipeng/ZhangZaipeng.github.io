一、Minor GC日志样例
  2015-05-26T14:45:37.987-0200:
    151.126: [GC (Allocation Failure)
    151.126: [DefNew: 629119K->69888K(629120K), 0.0584157 secs]
    1619346K->1273247K(2027264K), 0.0585007 secs]
  [Times: user=0.06 sys=0.00, real=0.06 secs]

二、Minor GC分析
  1. 2015-05-26T14:45:37.987-0200
    GC事件开始的时间. 其中-0200表示西二时区,而中国所在的东8区为 +0800
  2. 151.126
    GC时间的开始时间,相对于JVM的启动时间,单位是秒
  3. GC
    用来区分 Minor GC 还是 Full GC 的标志。GC表明这是一次小型GC(Minor GC)
  4. Allocation Failure
    触发 GC 的原因。本次GC事件, 是由于年轻代中没有空间来存放新的数据结构引起的。
  5. DefNew – 使用的垃圾收集器的名字. DefNew 这个名字代表的是:
       单线程(single-threaded), 采用标记复制(mark-copy)算法的, 全线暂停(STW) 垃圾收集器。
  6. 629119K -> 69888K
    在垃圾收集之前和之后年轻代的使用量
  7. (629120K)
    年轻代的总的大小(Total size).
  8. 1619346K->1273247K
    在垃圾收集之前和之后整个堆内存的使用情况。
  9. (2027264K)
    总的可用的堆内存(Total available heap).
  10. 0.0585007 secs
    GC事件的持续时间(Duration),单位是秒.
  11. [Times: user=0.06 sys=0.00, real=0.06 secs] – GC事件的持续时间,通过三个部分来进行衡量:
     user – 此次垃圾回收, 垃圾收集线程消耗的所有CPU时间(Total CPU time).
     sys – 操作系统调用(OS call) 以及等待系统事件的时间(waiting for system event)
     real – 应用程序暂停的时间(Clock time). 由于串行垃圾收集器(Serial Garbage Collector)只会使用单个线程, 所以 real time 等于 user 以及 system time 的总和.

三、Full GC日志样例
  2015-05-26T14:45:59.690-0200:
    172.829: [GC (Allocation Failure
    172.829: [DefNew: 629120K->629120K(629120K), 0.0000372 secs]
    172.829: [Tenured:1203359K->755802K (1398144K), 0.1855567 secs ]
    1832479K->755802K(2027264K), [Metaspace: 6741K->6741K(1056768K)]
  [Times: user=0.18 sys=0.00, real=0.18 secs]

四、Full GC分析
  2015-05-26T14:45:59.690-0200
    GC事件开始的时间. 其中-0200表示西二时区,而中国所在的东8区为 +0800。
  172.829
    GC事件开始时,相对于JVM启动时的间隔时间,单位是秒。
  [DefNew: 629120K->629120K(629120K), 0.0000372 secs
    与上面的示例类似, 因为内存分配失败,在年轻代中发生了一次 minor GC。
    此次GC同样使用的是 DefNew 收集器, 让年轻代的使用量从 629120K 降为 0。
    注意,JVM对此次GC的报告有些问题,误将年轻代认为是完全填满的。此次垃圾收集消耗了 0.0000372秒。
  Tenured
    用于清理老年代空间的垃圾收集器名称。Tenured 表明使用的是单线程的全线暂停垃圾收集器, 收集算法为 标记-清除-整理(mark-sweep-compact )。
  1203359K->755802K
    在垃圾收集之前和之后老年代的使用量。
  (1398144K)
    老年代的总空间大小。
  0.1855567 secs
    清理老年代所花的时间。
  1832479K->755802K
    在垃圾收集之前和之后,整个堆内存的使用情况。
  (2027264K)
    可用堆的总空间大小。
  [Metaspace: 6741K->6741K(1056768K)]
    关于 Metaspace 空间, 同样的信息。可以看出, 此次GC过程中 Metaspace 中没有收集到任何垃圾。


参考资料
  https://blog.csdn.net/renfufei/article/details/54885190
