1.查看TCP 连接数
    netstat -n | awk '/^tcp/{++S[$NF]} END {for(a in S) print a, S[a]}'

    返回结果一般如下：
    LAST_ACK 5 （正在等待处理的请求数）
    SYN_RECV 30
    ESTABLISHED 1597 （正常数据传输状态）
    FIN_WAIT1 51
    FIN_WAIT2 504
    TIME_WAIT 1057 （处理完毕，等待超时结束的请求数）

    其他参数：
    CLOSED：无连接是活动的或正在进行
    LISTEN：服务器在等待进入呼叫
    SYN_RECV：一个连接请求已经到达，等待确认
    SYN_SENT：应用已经开始，打开一个连接
    ESTABLISHED：正常数据传输状态
    FIN_WAIT1：应用说它已经完成
    FIN_WAIT2：另一边已同意释放
    ITMED_WAIT：等待所有分组死掉
    CLOSING：两边同时尝试关闭
    TIME_WAIT：另一边已初始化一个释放
    LAST_ACK：等待所有分组死掉

2.查看java 进程的线程数
    ps -eLf | grep java |grep api| wc -l
    注意: Linux服务器每进程不允许超过1000个线程

2.网络参数 及 内核参数
    1.文件句柄（同时打开文件数，默认只有1024）查看
        ulimit -n 打开最大文件
        ulimit -s 线程栈大小
        ulimit -u 最大可用的进程数
    2.及时修改

    3.网络参数优化
        net.ipv4.tcp_syncookies = 1 开启SYN Cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少
        量SYN攻击；
        net.ipv4.tcp_tw_reuse = 1 开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0
        net.ipv4.tcp_tw_recycle = 1 开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭。
        net.ipv4.tcp_fin_timeout = 30 如果套接字由本端要求关闭，它决定了它保持在FIN-WAIT-2状态的时间。
        net.ipv4.tcp_keepalive_time = 1200 当keepalive起用的时候，TCP发送keepalive消息的频度。缺省是2小时
        net.ipv4.tcp_keepalive_intvl = 30
        net.ipv4.tcp_keepalive_probes = 3 probe 3次(每次30秒)不成功,内核才彻底放弃。
        tcp_keepalive_time = 7200 seconds (2 hours)
        tcp_keepalive_probes = 9
        tcp_keepalive_intvl = 75 seconds
        net.ipv4.ip_local_port_range = 1024 65000 用于向外连接的端口范围。缺省情况下很小：32768到61000，
        改为1024到65000。
        net.ipv4.tcp_max_syn_backlog = 8192 SYN队列的长度，默认为1024，加大队列长度为8192，可以容纳更多
        等待连接的网络连接数。
        net.ipv4.netdev_max_backlog = 1000 表示进入包的最大设备队列，默认300，改大
        net.core.tcp_max_tw_buckets = 5000 系统同时保持TIME_WAIT套接字的最大数量，如果超过这个数字，
        TIME_WAIT套接字将立刻被清除并打印警告信息。默认为180000，改为 5000。
        另外可以参考优化内核配置：
        /proc/sys/net/core/wmem_max 最大socket写buffer,可参考的优化值:873200
        /proc/sys/net/core/rmem_max 最大socket读buffer,可参考的优化值:873200
        /proc/sys/net/ipv4/tcp_wmem TCP写buffer,可参考的优化值: 8192 436600 873200
        /proc/sys/net/ipv4/tcp_rmem TCP读buffer,可参考的优化值: 32768 436600 873200
        /proc/sys/net/ipv4/tcp_mem
        同样有3个值,意思是:配置单位为页，不是字节
        net.ipv4.tcp_mem[0]:低于此值,TCP没有内存压力. 786432
        net.ipv4.tcp_mem[1]:在此值下,进入内存压力阶段. 1048576
        net.ipv4.tcp_mem[2]:高于此值,TCP拒绝分配socket. 1572864
        /proc/sys/net/core/somaxconn 256
        listen()的默认参数,挂起请求的最大数量.默认是128.对繁忙的服务器,增加该值有助于网络性能.
        /proc/sys/net/core/optmem_max socket buffer的最大初始化值,默认10K.
        /proc/sys/net/ipv4/tcp_retries2 TCP失败重传次数,默认值15.减少到5,以尽早释放内核资源.
        net.core.somaxconn = 32768 socket监听（listen）的backlog上限，是socket的监听队列。比如nginx 定义
        NGX_LISTEN_BACKLOG默认到511


3.tomcat参数优化

    连接数:maxConnections
    处理线程：maxThreads
    等候队列：acceptCount

