1.validate API
  用来检查我们的查询是否正确，以及查看底层生成查询是怎样的。
  校验查询
  GET twitter/_validate/query?q=user:foo
  GET twitter/_doc/_validate/query
  {
    "query": {
      "query_string": {
        "query": "post_date:foo",
        "lenient": false
      }
    }
  }

  获得查询解释
  GET twitter/_doc/_validate/query?explain=true
  {
    "query": {
      "query_string": {
        "query": "post_date:foo",
        "lenient": false
      }
    }
  }

  用rewrite获得比explain 更详细的解释
  GET twitter/_doc/_validate/query?rewrite=true
  {
    "query": {
      "more_like_this": {
        "like": {
          "_id": "2"
        },
        "boost_terms": 1
      }
    }
  }

2.Explain api
  详细参考：https://www.elastic.co/guide/en/elasticsearch/reference/current/search-explain.html
  获得某个查询的评分解释,及某个文档是否被这个查询命中
  GET /twitter/_doc/0/_explain
  {
        "query" : {
          "match" : { "message" : "elasticsearch" }
        }
  }

3.Search Shards API
  让我们可以了解可执行查询的索引分片节点情况
  GET /twitter/_search_shards

  想知道指定routing值的查询将在哪些分片节点上执行
  GET /twitter/_search_shards?routing=foo,baz

4.Search Template API
  参考：https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html

5.Count API
  GET /twitter/_doc/_count?q=user:kimchy
  GET /twitter/_doc/_count
  {
    "query" : {
      "term" : { "user" : "kimchy" }
    }
  }

6.Profile  为了调试、优化
  参考文档：https://www.elastic.co/guide/en/elasticsearch/reference/current/search-profile.html
  GET /twitter/_search
  {
    "profile": true,
    "query" : {
      "match" : { "message" : "some number" }
    }
  }
